// Reverse MAPS to get an idea of what this is for
// This code was generated by Claude, so more thorough testing is required

// Define constants for spam detection patterns
const SUSPICIOUS_LINK_DOMAINS = [
  'dating',
  'free-',
  'lead',
  'removeme',
  'fiverr',
  'platform',
];

const MARKETING_PHRASES = [
  /offer|service|price|\$|package|cost-effective/i,
  /conversion|lead|reach|customer|brand|exposure/i,
  /sale|marketing|promotion|submission/i,
  /million|scale|expand|grow|campaign/i,
  /free access|test run|contact form submission/i,
];

const GENERIC_GREETING_PATTERNS =
  /^hi( there)?[,.]?\s*$|^hello[,.]?\s*$|business owner|sir\/madam/i;

const DATING_CONTENT_PATTERNS =
  /dating|single|meet|flirt|sex|hot|admirer|unread message|local admirer/i;

const URGENCY_PHRASES =
  /urgent|hurry|limited time|act now|don't wait|expires|today only|don't miss|click now/i;

const UNSUBSCRIBE_PATTERNS =
  /unsubscribe|opt[ -]out|remove me|removeme|stop receiving/i;

const VAGUE_INQUIRY_PATTERNS =
  /could you (please )?(share|send) your offer|interested in|details if available|wondered if/i;

const CONTACT_FORM_PATTERNS =
  /contact form|submission|lead generator|leads|prospect/i;

const SUSPICIOUS_EMAIL_DOMAINS = [
  '.club',
  '.xyz',
  '.top',
  '.date',
  '.win',
  '.bid',
  '.website',
  '.online',
  'free-',
  '-platform.com',
  'stafir-',
  'dating',
  'offer',
];

/**
 * Analyzes an email to determine the likelihood it is spam.
 * This function only checks for positive spam indicators
 * (legitimate email signals), making it more configurable for different contexts.
 *
 * @param emailAddress The sender's email address
 * @param emailContent The content/body of the email
 * @returns A score from 0 to 1 indicating spam likelihood (higher = more likely spam)
 */
export const calculateSpamScore = (
  emailAddress: string,
  emailContent: string,
): number => {
  // Normalize inputs
  const email = emailAddress.toLowerCase();
  const content = emailContent.toLowerCase();

  // Initialize score
  let score = 0.0;

  // === CONTENT-BASED INDICATORS ===

  // 1. Contains links (strong spam indicator)
  if (/https?:\/\/|www\./i.test(content)) {
    score += 0.25;

    // Additional score for suspicious domains in links
    const matches = content.match(/https?:\/\/[^\s)]+/gi) || [];
    for (const match of matches) {
      if (SUSPICIOUS_LINK_DOMAINS.some((domain) => match.includes(domain))) {
        score += 0.1;
        break;
      }
    }
  }

  // 2. Marketing and promotional language
  let marketingScore = 0;
  for (const phrase of MARKETING_PHRASES) {
    if (phrase.test(content)) {
      marketingScore += 0.05;
    }
  }
  score += Math.min(0.25, marketingScore);

  // 3. Generic greetings or addressing
  if (GENERIC_GREETING_PATTERNS.test(content.split('\n')[0])) {
    score += 0.05;
  }

  // 4. Dating or adult content
  if (DATING_CONTENT_PATTERNS.test(content)) {
    score += 0.3;
  }

  // 5. Urgency phrases
  if (URGENCY_PHRASES.test(content)) {
    score += 0.1;
  }

  // 6. Emoji usage
  const emojiCount = (content.match(/[üòÄ-üôè]/gu) || []).length;
  score += Math.min(0.05, emojiCount * 0.02);

  // 7. Unsubscribe link presence
  if (UNSUBSCRIBE_PATTERNS.test(content)) {
    score += 0.1;
  }

  // 8. Vague or unsolicited inquiries
  if (VAGUE_INQUIRY_PATTERNS.test(content)) {
    score += 0.15;
  }

  // 9. Contact form or lead generation specific terms
  if (CONTACT_FORM_PATTERNS.test(content)) {
    score += 0.2;
  }

  // 10. Short message with suspicious content
  const isShort = content.split(/\s+/).length < 30;
  const hasSuspiciousContent =
    marketingScore > 0.1 || /https?:\/\/|www\./i.test(content);
  if (isShort && hasSuspiciousContent) {
    score += 0.1;
  }

  // === EMAIL ADDRESS INDICATORS ===

  // 1. Suspicious domains
  if (SUSPICIOUS_EMAIL_DOMAINS.some((domain) => email.includes(domain))) {
    score += 0.15;
  }

  // 2. Numeric patterns in username part of email
  const emailUsername = email.split('@')[0];
  if (/\d{3,}/.test(emailUsername)) {
    score += 0.05;
  }

  // No negative indicators as requested - scoring based only on spam signals

  // Ensure score is between 0 and 1
  return Math.max(0, Math.min(1, score));
};
